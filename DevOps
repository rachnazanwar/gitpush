pipeline {
    agent any
    
    environment {
        AWS_DEFAULT_REGION = 'your_region'
        AWS_ACCESS_KEY_ID = 'your_access_key'
        AWS_SECRET_ACCESS_KEY = 'your_secret_key'
        S3_BUCKET_NAME = 'your_s3_bucket_name'
        LOCAL_DIRECTORY = 'local_directory_to_upload'
    }

    stages {
        stage('Upload to S3') {
            steps {
                script {
                    // Upload files to S3
                    sh "aws s3 sync ${LOCAL_DIRECTORY} s3://${S3_BUCKET_NAME}/"
                }
            }
        }

        stage('List and Delete Old Files') {
            steps {
                script {
                    // List files in S3 bucket sorted by last modified time
                    def files = sh(script: "aws s3 ls s3://${S3_BUCKET_NAME}/ --recursive --human-readable --summarize", returnStdout: true).trim().split('\n')

                    // Sort files by last modified time
                    def sortedFiles = files.sort { a, b -> a.split("\\s+")[0].compareTo(b.split("\\s+")[0]) }.reverse()

                    // Keep the latest 5 files
                    def filesToKeep = sortedFiles.take(5)

                    // Delete old files
                    sortedFiles.each { file ->
                        if (!filesToKeep.contains(file)) {
                            sh "aws s3 rm s3://${S3_BUCKET_NAME}/${file.split("\\s+")[3]}"
                        }
                    }
                }
            }
        }
    }
}
